#https://vsupalov.com/docker-arg-env-variable-guide/
#https://medium.com/vteam/configure-docker-project-for-different-environments-using-docker-compose-3-bfbef37d951c
#https://medium.com/softonic-eng/docker-compose-from-development-to-production-88000124a57c
#https://stackoverflow.com/a/48651071
#https://github.com/docker/compose/issues/6170
#https://medium.com/faun/set-current-host-user-for-docker-container-4e521cef9ffc
#https://docs.bytemark.co.uk/article/wordpress-on-docker-with-phpmyadmin-ssl-via-traefik-and-automatic-updates/
#https://github.com/docker/compose/issues/3702
# Docker compose however treats double quotes differently when parsing .env file passed as env_file: .env in docker-compose.yml.
# It does not ignore double quotes and treats them as a part of the string.

# production, staging, develop, etc.
APP_ENV=develop
APP_ID=changeme

DOMAIN=domain.tld
NETWORK_EXTERNAL=

#https://github.com/bitnami/charts/issues/35164
#https://github.com/docker-library/mariadb/issues/160#issuecomment-531808461
MARIADB_TAG=latest
MARIADB_ROOT_USER=root
MARIADB_ROOT_PASSWORD=changeme
# comma-separated list of databases
MARIADB_DATABASES=db1,db2,db3,db4,db5

#https://github.com/bitnami/charts/issues/35164
APACHE_TAG=latest
APACHE_HTTP_PORT=80
APACHE_HTTPS_PORT=443
APACHE_REWRITE_MODULE_ENABLED=true
APACHE_LDAP_MODULE_ENABLED=
APACHE_EVASIVE_MODULE_ENABLED=
APACHE_DEFLATE_MODULE_ENABLED=true
APACHE_ENV_MODULE_ENABLED=true
APACHE_EXPIRES_MODULE_ENABLED=true
APACHE_EXT_FILTER_MODULE_ENABLED=true
APACHE_FILTER_MODULE_ENABLED=true
APACHE_HEADERS_MODULE_ENABLED=true
APACHE_MIME_MODULE_ENABLED=true
APACHE_SETENVIF_MODULE_ENABLED=true
APACHE_HTTP2_MODULE_ENABLED=true
APACHE_SECURITY3_MODULE_ENABLED=
APACHE_REMOTEIP_MODULE_ENABLED=
APACHE_PAGESPEED_MODULE_ENABLED=

#https://github.com/bitnami/charts/issues/35164
#https://github.com/bitnami/bitnami-docker-php-fpm/issues/130
PHP_TAG=8.4
PHP_WAITFORIT_CONTAINER_NAME=mariadb
PHP_WAITFORIT_CONTAINER_PORT=3306
PHP_TZ=UTC
#https://github.com/bitnami/bitnami-docker-moodle/pull/123
#https://github.com/bitnami/bitnami-docker-moodle/blob/master/3/debian-10/rootfs/opt/bitnami/scripts/locales/add-extra-locales.sh
#https://github.com/bitnami/bitnami-docker-moodle#installing-additional-language-packs
PHP_WITH_ALL_LOCALES=
PHP_EXTRA_LOCALES=en_US.UTF-8 UTF-8, it_IT.UTF-8 UTF-8
PHP_CUSTOM_ENV_VARS=
PHP_COMPOSER_GLOBAL_LIBS=
PHP_COMPOSER_PATHS=
#https://github.com/composer/composer/issues/8913
PHP_COMPOSER_VERSION=
PHP_COMPOSER_ARG=--2
#https://github.com/composer/composer/issues/3162
PHP_COMPOSER_PROCESS_TIMEOUT=9999
PHP_WP_CLI_ENABLED=
PHP_APCU_ENABLED=true
PHP_MCRYPT_ENABLED=
PHP_IMAGICK_ENABLED=true
PHP_IMAGICK_POLICY_RULES=
PHP_MAXMINDDB_ENABLED=
PHP_MONGODB_ENABLED=
PHP_XDEBUG_ENABLED=true
PHP_MEMCACHED_ENABLED=
PHP_PDO_DBLIB_ENABLED=
PHP_PDO_PGSQL_ENABLED=
PHP_PGSQL_ENABLED=
PHP_OPCACHE_ENABLED=true
PHP_SODIUM_ENABLED=
PHP_REDIS_ENABLED=
PHP_IGBINARY_ENABLED=
PHP_MSGPACK_ENABLED=
PHP_SUPERCRONIC_ENABLED=
# Available flags:
# -debug (enable debug logging)
# -json (enable JSON logging)
# -overlapping (enable tasks overlapping)
# -passthrough-logs (passthrough logs from commands, do not wrap them in Supercronic logging)
# -prometheus-listen-address string (give a valid ip[:port] address to expose Prometheus metrics at /metrics (port defaults to 9746), use 0.0.0.0 for all network interfaces)
# -quiet (do not log informational messages - takes precedence over debug)
# -sentry-dsn string (enable Sentry error logging, using provided DSN)
# -sentry-environment string (specify the application's environment for Sentry error reporting)
# -sentry-release string (specify the application's release version for Sentry error reporting)
# -sentryDsn string (alias for sentry-dsn)
# -split-logs (split log output into stdout/stderr)
# -test (test crontab (does not run jobs))
PHP_SUPERCRONIC_FLAGS=-debug
PHP_SENTRY_DSN=
#https://php.watch/articles/jit-in-depth
# By default, JIT is enabled, but it is turned off by limiting the buffer size.
# A value of 50-100% of the current Opcache shared memory for Opcode might be the ideal value for opcache.jit_buffer_size.
PHP_JIT_BUFFER_SIZE=128M
# PHP sendmail configuration
#
# msmtp is executed in the PHP-FPM process context (user: daemon), so:
# - stderr is automatically captured by container stderr stream (if php-fpm error_log = /dev/stderr)
#   otherwise it goes to php-fpm error_log file (e.g. /opt/bitnami/php/logs/php-fpm.log)
# - No stdout redirection needed here unless you want to force all output to stderr
# - The -t flag tells msmtp to read recipients from message headers
# - The --read-envelope-from flag reads the envelope from address from the From header of the mail,
#   or from Resent-From if such a header is present and appears before any From header
#
# Options:
# - `/usr/bin/msmtp -t` (default)
# - `/usr/bin/msmtp -t --account=mailpit` (with specific account)
# - `/usr/bin/msmtp -t --read-envelope-from` (read envelope from header - see notes below)
#
# Notes:
# 1. The -f option passed by PHP's mail() function translates to msmtp's -f/--from,
#    which can prevent emails from being sent (e.g., "Could not instantiate mail function")
# 2. Be cautious with --read-envelope-from in multi-domain environments
#    as it conflicts with msmtp's -f/--from option used by PHP's mail() function
#    (e.g., "cannot use both --from and --read-envelope-from")
# 3. stdoutâ†’stderr redirection (1>&2, >&2) is unnecessary because:
#    - Without `logfile` directive: msmtp produces no stdout, only stderr for errors (already captured)
#    - With `logfile` directive: msmtp stdout is already captured by container logs
PHP_SENDMAIL_PATH=

# development, testing, staging, production, etc.
NODE_ENV=development
#https://github.com/bitnami/charts/issues/35164
NODE_TAG=20
NODE_PORT=1337
NODE_WAITFORIT_CONTAINER_NAME=
NODE_WAITFORIT_CONTAINER_PORT=
NODE_NPM_GLOBAL_LIBS=
NODE_NPM_PATHS=

#https://github.com/bitnami/charts/issues/35164
PHPMYADMIN_TAG=latest
PHPMYADMIN_HTTP_PORT=8084
PHPMYADMIN_HTTPS_PORT=8444
PHPMYADMIN_ALLOW_ARBITRARY_SERVER=false
PHPMYADMIN_ALLOW_NO_PASSWORD=true
PHPMYADMIN_DATABASE_HOST=mariadb
PHPMYADMIN_DATABASE_PORT_NUMBER=3306
PHPMYADMIN_DATABASE_ENABLE_SSL=no
PHPMYADMIN_DATABASE_SSL_KEY=no
PHPMYADMIN_DATABASE_SSL_CERT=
PHPMYADMIN_DATABASE_SSL_CA=
PHPMYADMIN_DATABASE_SSL_CA_PATH=
PHPMYADMIN_DATABASE_SSL_CIPHERS=
PHPMYADMIN_DATABASE_SSL_VERIFY=yes

MAILPIT_TAG=latest
MAILPIT_HTTP_PORT=8025
MAILPIT_SMTP_PORT=1025
MAILPIT_MAX_MESSAGES=5000
MAILPIT_SMTP_AUTH_ACCEPT_ANY=true
MAILPIT_SMTP_AUTH_ALLOW_INSECURE=true
MAILPIT_SMTP_REQUIRE_TLS=false
#https://github.com/axllent/mailpit/issues/493
#https://github.com/axllent/mailpit/issues/171
#https://mailpit.axllent.org/docs/configuration/smtp/
# Notes:
# 1. authentication cannot use both credentials and --smtp-auth-accept-any
#    (cf. MAILPIT_SMTP_AUTH_ACCEPT_ANY)
# 2. authentication requires STARTTLS or TLS encryption, run with `--smtp-auth-allow-insecure`
#    (cf. MAILPIT_SMTP_AUTH_ALLOW_INSECURE) to allow insecure authentication
MAILPIT_SMTP_AUTH=

MOCK_OAUTH2_TAG=2.2.1
MOCK_OAUTH2_PORT=8080
MOCK_OAUTH2_LOG_LEVEL=INFO
MOCK_OAUTH2_JSON_CONFIG_PATH=
MOCK_OAUTH2_JSON_CONFIG=
MOCK_OAUTH2_LOGBACK_CONFIG=

MOCK_GRAPH_API_TAG=latest
MOCK_GRAPH_API_PORT=9090

NEWRELIC_ENABLED=
#https://download.newrelic.com/php_agent/release
NEWRELIC_VERSION=9.16.0.295

#https://jtreminio.com/blog/running-docker-containers-as-current-host-user/
USER_ID=
GROUP_ID=

GITLAB_USERNAME=
GITLAB_PASSWORD=

GITHUB_TOKEN=
